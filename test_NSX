Using the VMware NSX SDK to fetch Distributed Firewall (DFW) rules directly from NSX Manager can make the process much more streamlined and reliable. With the NSX SDK for Python, you can authenticate to NSX Manager, fetch DFW rules, and then save them into an Excel report. This approach avoids the need for manual exports of DFW rules to JSON or CSV.
Prerequisites
	1. Install NSX SDK: Install the NSX Python SDK if you haven't already. You can usually find it in VMware's official repositories, or it may be available through pip:


• pip install vmware-nsxlib
• Install pandas and openpyxl:


	2. pip install pandas openpyxl
Script
This script will:
	1. Authenticate to NSX Manager using the NSX SDK.
	2. Retrieve DFW rules.
	3. Format the data into a DataFrame.
	4. Export the data to an Excel file.




importpandas aspd
fromvmware.vapi.vsphere.client importcreate_vsphere_client
fromvmware.nsx.policy.infra.domains.security_policies.rules_client importRule
fromcom.vmware.nsx.policy_client importPolicy
importrequests
fromrequests.packages.urllib3.exceptions importInsecureRequestWarning
# Disable insecure warnings (for self-signed SSL certificates)requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
defnsx_authenticate(nsx_manager, username, password):
    """
    Authenticates to NSX Manager and returns an NSX policy client.
    """session = requests.session()
    session.verify = False# Disable SSL verification if using self-signed certificatesclient = Policy(username=username, password=password, session=session, url=f"https://{nsx_manager}")
    returnclient
defget_dfw_rules(nsx_policy_client, domain_id="default"):
    """
    Retrieves DFW rules from NSX Manager for the specified domain.
    
    Parameters:
        nsx_policy_client: Authenticated NSX policy client.
        domain_id (str): Domain ID to retrieve the rules from (default is 'default').
        
    Returns:
        List of rule dictionaries.
    """rule_service = nsx_policy_client.Infra.Domains.SecurityPolicies.Rules
    rules = rule_service.list(domain_id=domain_id).results
    returnrules
defgenerate_dfw_report_from_nsx(nsx_manager, username, password, domain_id="default", output_file="DFW_Rules_Report.xlsx"):
    """
    Connects to NSX Manager, fetches DFW rules, and generates an Excel report.
    
    Parameters:
        nsx_manager (str): NSX Manager IP or hostname.
        username (str): Username for NSX Manager.
        password (str): Password for NSX Manager.
        domain_id (str): Domain ID (default: 'default').
        output_file (str): Output Excel file path (default: 'DFW_Rules_Report.xlsx').
    """# Authenticate and get NSX policy clientnsx_client = nsx_authenticate(nsx_manager, username, password)
    
    # Retrieve DFW rulesrules = get_dfw_rules(nsx_client, domain_id=domain_id)
    
    # Extract relevant information from rulesrule_data = []
    forrule inrules:
        rule_info = {
            "rule_id": rule.id,
            "name": rule.display_name,
            "source": ', '.join([src.target_id forsrc inrule.source_groups]),
            "destination": ', '.join([dest.target_id fordest inrule.destination_groups]),
            "service": ', '.join([svc.target_id forsvc inrule.services]),
            "action": rule.action,
            "direction": rule.direction,
            "scope": ', '.join(rule.scope),
            "applied_to": ', '.join([applied.target_id forapplied inrule.applied_tos]),
            "logged": rule.logged,
            "disabled": rule.disabled
        }
        rule_data.append(rule_info)
    
    # Create DataFrame and write to Exceldf = pd.DataFrame(rule_data)
    withpd.ExcelWriter(output_file, engine="openpyxl") aswriter:
        df.to_excel(writer, sheet_name="DFW Rules", index=False)
print(f"DFW report generated: {output_file}")
# Usage example# Replace 'nsx_manager_ip', 'username', 'password' with your NSX Manager detailsgenerate_dfw_report_from_nsx("nsx_manager_ip", "username", "password")
Explanation
	• Authentication: The nsx_authenticate function establishes a connection to NSX Manager using the NSX SDK and returns an authenticated Policy client object.
	• Fetch Rules: The get_dfw_rules function retrieves all rules in the specified domain (default by default) from NSX Manager.
	• Extract Data: The script iterates over the retrieved rules, extracting relevant fields such as rule ID, source, destination, service, action, etc.
	• Generate Excel Report: The data is written to an Excel file using pandas.
Usage
	1. Replace "nsx_manager_ip", "username", and "password" with your NSX Manager IP address and credentials.
	2. Run the script, and it will generate an Excel file named DFW_Rules_Report.xlsx.
This approach directly pulls data from NSX Manager and is ideal for scenarios where automation and real-time data extraction are needed.


